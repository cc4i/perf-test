// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.0
// 	protoc        v4.22.2
// source: proto/ptadmin.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Task type
type PtTaskType int32

const (
	// Unknown task type
	PtTaskType_UNKNOWN_TASK_TYPE PtTaskType = 0
	// Local task type
	PtTaskType_LOCAL PtTaskType = 1
	// Distribution task type
	PtTaskType_DISTRIBUTION PtTaskType = 2
)

// Enum value maps for PtTaskType.
var (
	PtTaskType_name = map[int32]string{
		0: "UNKNOWN_TASK_TYPE",
		1: "LOCAL",
		2: "DISTRIBUTION",
	}
	PtTaskType_value = map[string]int32{
		"UNKNOWN_TASK_TYPE": 0,
		"LOCAL":             1,
		"DISTRIBUTION":      2,
	}
)

func (x PtTaskType) Enum() *PtTaskType {
	p := new(PtTaskType)
	*p = x
	return p
}

func (x PtTaskType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PtTaskType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_ptadmin_proto_enumTypes[0].Descriptor()
}

func (PtTaskType) Type() protoreflect.EnumType {
	return &file_proto_ptadmin_proto_enumTypes[0]
}

func (x PtTaskType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PtTaskType.Descriptor instead.
func (PtTaskType) EnumDescriptor() ([]byte, []int) {
	return file_proto_ptadmin_proto_rawDescGZIP(), []int{0}
}

// Task status
type PtLaunchedTaskStatus int32

const (
	// Unknown task status
	PtLaunchedTaskStatus_UNKNOWN_TASK_STATUS PtLaunchedTaskStatus = 0
	// Task is pending
	PtLaunchedTaskStatus_PENDING PtLaunchedTaskStatus = 1
	// Task is running
	PtLaunchedTaskStatus_RUNNING PtLaunchedTaskStatus = 2
	// Task is finished
	PtLaunchedTaskStatus_FINISHED PtLaunchedTaskStatus = 3
	// Task is failed
	PtLaunchedTaskStatus_FAILED PtLaunchedTaskStatus = 4
	// Task is caneling /British English: CANCELLING / American English: CANCELING
	PtLaunchedTaskStatus_CANCELLING PtLaunchedTaskStatus = 5
	// Task is canceled /British English: CANCELLED / American English: CANCELED
	PtLaunchedTaskStatus_CANCELLED PtLaunchedTaskStatus = 6
)

// Enum value maps for PtLaunchedTaskStatus.
var (
	PtLaunchedTaskStatus_name = map[int32]string{
		0: "UNKNOWN_TASK_STATUS",
		1: "PENDING",
		2: "RUNNING",
		3: "FINISHED",
		4: "FAILED",
		5: "CANCELLING",
		6: "CANCELLED",
	}
	PtLaunchedTaskStatus_value = map[string]int32{
		"UNKNOWN_TASK_STATUS": 0,
		"PENDING":             1,
		"RUNNING":             2,
		"FINISHED":            3,
		"FAILED":              4,
		"CANCELLING":          5,
		"CANCELLED":           6,
	}
)

func (x PtLaunchedTaskStatus) Enum() *PtLaunchedTaskStatus {
	p := new(PtLaunchedTaskStatus)
	*p = x
	return p
}

func (x PtLaunchedTaskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PtLaunchedTaskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_ptadmin_proto_enumTypes[1].Descriptor()
}

func (PtLaunchedTaskStatus) Type() protoreflect.EnumType {
	return &file_proto_ptadmin_proto_enumTypes[1]
}

func (x PtLaunchedTaskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PtLaunchedTaskStatus.Descriptor instead.
func (PtLaunchedTaskStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_ptadmin_proto_rawDescGZIP(), []int{1}
}

// Status of provisioning workflow
type WorkflowStatus int32

const (
	// Unknown workflow status
	WorkflowStatus_UNKNOWN_WORKFLOW_STATUS WorkflowStatus = 0
	// Workflow is provisioning
	WorkflowStatus_PROVISIONING WorkflowStatus = 1
	// Workflow is provisioning finished
	WorkflowStatus_PROVISIONING_FINISHED WorkflowStatus = 2
	// Workflow is provisioning failed
	WorkflowStatus_PROVISIONING_FAILED WorkflowStatus = 3
)

// Enum value maps for WorkflowStatus.
var (
	WorkflowStatus_name = map[int32]string{
		0: "UNKNOWN_WORKFLOW_STATUS",
		1: "PROVISIONING",
		2: "PROVISIONING_FINISHED",
		3: "PROVISIONING_FAILED",
	}
	WorkflowStatus_value = map[string]int32{
		"UNKNOWN_WORKFLOW_STATUS": 0,
		"PROVISIONING":            1,
		"PROVISIONING_FINISHED":   2,
		"PROVISIONING_FAILED":     3,
	}
)

func (x WorkflowStatus) Enum() *WorkflowStatus {
	p := new(WorkflowStatus)
	*p = x
	return p
}

func (x WorkflowStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkflowStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_ptadmin_proto_enumTypes[2].Descriptor()
}

func (WorkflowStatus) Type() protoreflect.EnumType {
	return &file_proto_ptadmin_proto_enumTypes[2]
}

func (x WorkflowStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkflowStatus.Descriptor instead.
func (WorkflowStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_ptadmin_proto_rawDescGZIP(), []int{2}
}

type ScriptType int32

const (
	// Unknown script type
	ScriptType_UNKNOWN_SCRIPT_TYPE ScriptType = 0
	// Script type: file
	ScriptType_FILE ScriptType = 1
	// Script type: zip
	ScriptType_ZIP ScriptType = 2
	// Script type: gz
	ScriptType_GZ ScriptType = 3
	// Script type: tar
	ScriptType_TAR ScriptType = 4
	// Script type: tgz
	ScriptType_TGZ ScriptType = 5
)

// Enum value maps for ScriptType.
var (
	ScriptType_name = map[int32]string{
		0: "UNKNOWN_SCRIPT_TYPE",
		1: "FILE",
		2: "ZIP",
		3: "GZ",
		4: "TAR",
		5: "TGZ",
	}
	ScriptType_value = map[string]int32{
		"UNKNOWN_SCRIPT_TYPE": 0,
		"FILE":                1,
		"ZIP":                 2,
		"GZ":                  3,
		"TAR":                 4,
		"TGZ":                 5,
	}
)

func (x ScriptType) Enum() *ScriptType {
	p := new(ScriptType)
	*p = x
	return p
}

func (x ScriptType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScriptType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_ptadmin_proto_enumTypes[3].Descriptor()
}

func (ScriptType) Type() protoreflect.EnumType {
	return &file_proto_ptadmin_proto_enumTypes[3]
}

func (x ScriptType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScriptType.Descriptor instead.
func (ScriptType) EnumDescriptor() ([]byte, []int) {
	return file_proto_ptadmin_proto_rawDescGZIP(), []int{3}
}

// Traffic for the task
type PtTaskRequestTraffic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Region for the traffic
	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	// Percent for the traffic => Number of workers in this region
	Percent int32 `protobuf:"varint,2,opt,name=percent,proto3" json:"percent,omitempty"`
}

func (x *PtTaskRequestTraffic) Reset() {
	*x = PtTaskRequestTraffic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ptadmin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PtTaskRequestTraffic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PtTaskRequestTraffic) ProtoMessage() {}

func (x *PtTaskRequestTraffic) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ptadmin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PtTaskRequestTraffic.ProtoReflect.Descriptor instead.
func (*PtTaskRequestTraffic) Descriptor() ([]byte, []int) {
	return file_proto_ptadmin_proto_rawDescGZIP(), []int{0}
}

func (x *PtTaskRequestTraffic) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *PtTaskRequestTraffic) GetPercent() int32 {
	if x != nil {
		return x.Percent
	}
	return 0
}

// Request to upload scripts for the task
type PtTaskScriptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Script name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Script type: file, zip, gz, tar, tgz, etc; "file is default, plain text file"
	Type ScriptType `protobuf:"varint,2,opt,name=type,proto3,enum=ScriptType" json:"type,omitempty"`
	// Script content
	Data []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PtTaskScriptRequest) Reset() {
	*x = PtTaskScriptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ptadmin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PtTaskScriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PtTaskScriptRequest) ProtoMessage() {}

func (x *PtTaskScriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ptadmin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PtTaskScriptRequest.ProtoReflect.Descriptor instead.
func (*PtTaskScriptRequest) Descriptor() ([]byte, []int) {
	return file_proto_ptadmin_proto_rawDescGZIP(), []int{1}
}

func (x *PtTaskScriptRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PtTaskScriptRequest) GetType() ScriptType {
	if x != nil {
		return x.Type
	}
	return ScriptType_UNKNOWN_SCRIPT_TYPE
}

func (x *PtTaskScriptRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// Response to upload scripts for the task
type PtTaskScriptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Task Id
	CorrelationId string `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
}

func (x *PtTaskScriptResponse) Reset() {
	*x = PtTaskScriptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ptadmin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PtTaskScriptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PtTaskScriptResponse) ProtoMessage() {}

func (x *PtTaskScriptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ptadmin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PtTaskScriptResponse.ProtoReflect.Descriptor instead.
func (*PtTaskScriptResponse) Descriptor() ([]byte, []int) {
	return file_proto_ptadmin_proto_rawDescGZIP(), []int{2}
}

func (x *PtTaskScriptResponse) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

// Task for performance test
type PtTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Total users to be stimulated in test
	TotalUsers int32 `protobuf:"varint,1,opt,name=total_users,json=totalUsers,proto3" json:"total_users,omitempty"`
	// Duration for test
	Duration int32 `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
	// Ramp up time for test
	RampUp int32 `protobuf:"varint,3,opt,name=ramp_up,json=rampUp,proto3" json:"ramp_up,omitempty"`
	// The url of target site
	TargetUrl string `protobuf:"bytes,4,opt,name=target_url,json=targetUrl,proto3" json:"target_url,omitempty"`
	// Task type for perforamnce test: Local, or Distribution
	Type PtTaskType `protobuf:"varint,6,opt,name=type,proto3,enum=PtTaskType" json:"type,omitempty"`
	// Customized Worker number for the task: if not set, use "total_users" to calculate worker number
	WorkerNumber int32 `protobuf:"varint,7,opt,name=worker_number,json=workerNumber,proto3" json:"worker_number,omitempty"`
	// Traffics arragement
	Traffics []*PtTaskRequestTraffic `protobuf:"bytes,10,rep,name=traffics,proto3" json:"traffics,omitempty"`
	// Task id, which is used to identify the task
	CorrelationId string `protobuf:"bytes,30,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
}

func (x *PtTaskRequest) Reset() {
	*x = PtTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ptadmin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PtTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PtTaskRequest) ProtoMessage() {}

func (x *PtTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ptadmin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PtTaskRequest.ProtoReflect.Descriptor instead.
func (*PtTaskRequest) Descriptor() ([]byte, []int) {
	return file_proto_ptadmin_proto_rawDescGZIP(), []int{3}
}

func (x *PtTaskRequest) GetTotalUsers() int32 {
	if x != nil {
		return x.TotalUsers
	}
	return 0
}

func (x *PtTaskRequest) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *PtTaskRequest) GetRampUp() int32 {
	if x != nil {
		return x.RampUp
	}
	return 0
}

func (x *PtTaskRequest) GetTargetUrl() string {
	if x != nil {
		return x.TargetUrl
	}
	return ""
}

func (x *PtTaskRequest) GetType() PtTaskType {
	if x != nil {
		return x.Type
	}
	return PtTaskType_UNKNOWN_TASK_TYPE
}

func (x *PtTaskRequest) GetWorkerNumber() int32 {
	if x != nil {
		return x.WorkerNumber
	}
	return 0
}

func (x *PtTaskRequest) GetTraffics() []*PtTaskRequestTraffic {
	if x != nil {
		return x.Traffics
	}
	return nil
}

func (x *PtTaskRequest) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

// Launched Task for performance test with status and links
type PtLaunchedTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Task id
	CorrelationId string `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	// Task
	Task *PtTaskRequest `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
	// Task status
	TaskStatus PtLaunchedTaskStatus `protobuf:"varint,3,opt,name=task_status,json=taskStatus,proto3,enum=PtLaunchedTaskStatus" json:"task_status,omitempty"`
	// Status of provisioning workflow
	ProvisionStatus WorkflowStatus `protobuf:"varint,4,opt,name=provision_status,json=provisionStatus,proto3,enum=WorkflowStatus" json:"provision_status,omitempty"`
	// Created time
	Created *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created,proto3" json:"created,omitempty"`
	// Finished time
	Finished *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=finished,proto3" json:"finished,omitempty"`
	// last updated time
	LastUpdated *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	// Link to metrics dashboard
	MetricsLink string `protobuf:"bytes,10,opt,name=metrics_link,json=metricsLink,proto3" json:"metrics_link,omitempty"`
	// Link to logs
	LogsLink string `protobuf:"bytes,11,opt,name=logs_link,json=logsLink,proto3" json:"logs_link,omitempty"`
	// Link to download the test results
	DownloadLink string `protobuf:"bytes,12,opt,name=download_link,json=downloadLink,proto3" json:"download_link,omitempty"`
}

func (x *PtLaunchedTask) Reset() {
	*x = PtLaunchedTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ptadmin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PtLaunchedTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PtLaunchedTask) ProtoMessage() {}

func (x *PtLaunchedTask) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ptadmin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PtLaunchedTask.ProtoReflect.Descriptor instead.
func (*PtLaunchedTask) Descriptor() ([]byte, []int) {
	return file_proto_ptadmin_proto_rawDescGZIP(), []int{4}
}

func (x *PtLaunchedTask) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *PtLaunchedTask) GetTask() *PtTaskRequest {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *PtLaunchedTask) GetTaskStatus() PtLaunchedTaskStatus {
	if x != nil {
		return x.TaskStatus
	}
	return PtLaunchedTaskStatus_UNKNOWN_TASK_STATUS
}

func (x *PtLaunchedTask) GetProvisionStatus() WorkflowStatus {
	if x != nil {
		return x.ProvisionStatus
	}
	return WorkflowStatus_UNKNOWN_WORKFLOW_STATUS
}

func (x *PtLaunchedTask) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *PtLaunchedTask) GetFinished() *timestamppb.Timestamp {
	if x != nil {
		return x.Finished
	}
	return nil
}

func (x *PtLaunchedTask) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

func (x *PtLaunchedTask) GetMetricsLink() string {
	if x != nil {
		return x.MetricsLink
	}
	return ""
}

func (x *PtLaunchedTask) GetLogsLink() string {
	if x != nil {
		return x.LogsLink
	}
	return ""
}

func (x *PtLaunchedTask) GetDownloadLink() string {
	if x != nil {
		return x.DownloadLink
	}
	return ""
}

// Task list for performance test
type PtLaunchedTaskList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Task to be created
	LaunchedTasks []*PtLaunchedTask `protobuf:"bytes,1,rep,name=launched_tasks,json=launchedTasks,proto3" json:"launched_tasks,omitempty"`
}

func (x *PtLaunchedTaskList) Reset() {
	*x = PtLaunchedTaskList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ptadmin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PtLaunchedTaskList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PtLaunchedTaskList) ProtoMessage() {}

func (x *PtLaunchedTaskList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ptadmin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PtLaunchedTaskList.ProtoReflect.Descriptor instead.
func (*PtLaunchedTaskList) Descriptor() ([]byte, []int) {
	return file_proto_ptadmin_proto_rawDescGZIP(), []int{5}
}

func (x *PtLaunchedTaskList) GetLaunchedTasks() []*PtLaunchedTask {
	if x != nil {
		return x.LaunchedTasks
	}
	return nil
}

var File_proto_ptadmin_proto protoreflect.FileDescriptor

var file_proto_ptadmin_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x74, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x48, 0x0a, 0x14, 0x50, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x22, 0x5e, 0x0a, 0x13, 0x50, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x53, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x3d, 0x0a, 0x14, 0x50, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0xa4, 0x02, 0x0a, 0x0d, 0x50, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x61, 0x6d, 0x70, 0x5f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x72, 0x61, 0x6d, 0x70, 0x55, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x50, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x65,
	0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x08,
	0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x50, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x72,
	0x61, 0x66, 0x66, 0x69, 0x63, 0x52, 0x08, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x73, 0x12,
	0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xe1, 0x03, 0x0a, 0x0e, 0x50, 0x74, 0x4c, 0x61, 0x75,
	0x6e, 0x63, 0x68, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x50, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04,
	0x74, 0x61, 0x73, 0x6b, 0x12, 0x36, 0x0a, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x50, 0x74, 0x4c, 0x61,
	0x75, 0x6e, 0x63, 0x68, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3a, 0x0a, 0x10,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x36,
	0x0a, 0x08, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x3d, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x73,
	0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x67,
	0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0x4c, 0x0a, 0x12, 0x50, 0x74,
	0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x36, 0x0a, 0x0e, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x74, 0x61, 0x73,
	0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x50, 0x74, 0x4c, 0x61, 0x75,
	0x6e, 0x63, 0x68, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x0d, 0x6c, 0x61, 0x75, 0x6e, 0x63,
	0x68, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x2a, 0x40, 0x0a, 0x0a, 0x50, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x5f, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a,
	0x05, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x49, 0x53, 0x54,
	0x52, 0x49, 0x42, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x2a, 0x82, 0x01, 0x0a, 0x14, 0x50,
	0x74, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x54,
	0x41, 0x53, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e,
	0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48,
	0x45, 0x44, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x04,
	0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x05,
	0x12, 0x0d, 0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x06, 0x2a,
	0x73, 0x0a, 0x0e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x57, 0x4f, 0x52,
	0x4b, 0x46, 0x4c, 0x4f, 0x57, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x00, 0x12, 0x10,
	0x0a, 0x0c, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01,
	0x12, 0x19, 0x0a, 0x15, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x49, 0x4e, 0x47,
	0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x50,
	0x52, 0x4f, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x46, 0x41, 0x49, 0x4c,
	0x45, 0x44, 0x10, 0x03, 0x2a, 0x52, 0x0a, 0x0a, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x43,
	0x52, 0x49, 0x50, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x46,
	0x49, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x5a, 0x49, 0x50, 0x10, 0x02, 0x12, 0x06,
	0x0a, 0x02, 0x47, 0x5a, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x41, 0x52, 0x10, 0x04, 0x12,
	0x07, 0x0a, 0x03, 0x54, 0x47, 0x5a, 0x10, 0x05, 0x42, 0x06, 0x5a, 0x04, 0x2f, 0x61, 0x70, 0x69,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_ptadmin_proto_rawDescOnce sync.Once
	file_proto_ptadmin_proto_rawDescData = file_proto_ptadmin_proto_rawDesc
)

func file_proto_ptadmin_proto_rawDescGZIP() []byte {
	file_proto_ptadmin_proto_rawDescOnce.Do(func() {
		file_proto_ptadmin_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_ptadmin_proto_rawDescData)
	})
	return file_proto_ptadmin_proto_rawDescData
}

var file_proto_ptadmin_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_proto_ptadmin_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_ptadmin_proto_goTypes = []interface{}{
	(PtTaskType)(0),               // 0: PtTaskType
	(PtLaunchedTaskStatus)(0),     // 1: PtLaunchedTaskStatus
	(WorkflowStatus)(0),           // 2: WorkflowStatus
	(ScriptType)(0),               // 3: ScriptType
	(*PtTaskRequestTraffic)(nil),  // 4: PtTaskRequestTraffic
	(*PtTaskScriptRequest)(nil),   // 5: PtTaskScriptRequest
	(*PtTaskScriptResponse)(nil),  // 6: PtTaskScriptResponse
	(*PtTaskRequest)(nil),         // 7: PtTaskRequest
	(*PtLaunchedTask)(nil),        // 8: PtLaunchedTask
	(*PtLaunchedTaskList)(nil),    // 9: PtLaunchedTaskList
	(*timestamppb.Timestamp)(nil), // 10: google.protobuf.Timestamp
}
var file_proto_ptadmin_proto_depIdxs = []int32{
	3,  // 0: PtTaskScriptRequest.type:type_name -> ScriptType
	0,  // 1: PtTaskRequest.type:type_name -> PtTaskType
	4,  // 2: PtTaskRequest.traffics:type_name -> PtTaskRequestTraffic
	7,  // 3: PtLaunchedTask.task:type_name -> PtTaskRequest
	1,  // 4: PtLaunchedTask.task_status:type_name -> PtLaunchedTaskStatus
	2,  // 5: PtLaunchedTask.provision_status:type_name -> WorkflowStatus
	10, // 6: PtLaunchedTask.created:type_name -> google.protobuf.Timestamp
	10, // 7: PtLaunchedTask.finished:type_name -> google.protobuf.Timestamp
	10, // 8: PtLaunchedTask.last_updated:type_name -> google.protobuf.Timestamp
	8,  // 9: PtLaunchedTaskList.launched_tasks:type_name -> PtLaunchedTask
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_proto_ptadmin_proto_init() }
func file_proto_ptadmin_proto_init() {
	if File_proto_ptadmin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_ptadmin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PtTaskRequestTraffic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ptadmin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PtTaskScriptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ptadmin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PtTaskScriptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ptadmin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PtTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ptadmin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PtLaunchedTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ptadmin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PtLaunchedTaskList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_ptadmin_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_ptadmin_proto_goTypes,
		DependencyIndexes: file_proto_ptadmin_proto_depIdxs,
		EnumInfos:         file_proto_ptadmin_proto_enumTypes,
		MessageInfos:      file_proto_ptadmin_proto_msgTypes,
	}.Build()
	File_proto_ptadmin_proto = out.File
	file_proto_ptadmin_proto_rawDesc = nil
	file_proto_ptadmin_proto_goTypes = nil
	file_proto_ptadmin_proto_depIdxs = nil
}
